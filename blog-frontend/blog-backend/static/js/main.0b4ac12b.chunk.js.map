{"version":3,"sources":["services/blogs.js","reducers/notificationReducer.js","reducers/blogReducer.js","components/Blog.js","components/BlogList.js","components/NewBlogForm.js","services/login.js","reducers/userReducer.js","components/LoginForm.js","components/Toggleable.js","services/users.js","components/Users.js","components/Menu.js","components/User.js","components/BlogView.js","App.js","store.js","index.js","App.module.css"],"names":["baseUrl","token","addCommentToDB","comment","id","a","config","headers","Authorization","axios","post","response","data","getAll","get","then","setToken","newToken","clearToken","create","newObject","update","updatedObject","put","remove","delete","timeoutID","notificationChange","notification","duration","dispatch","clearTimeout","type","setTimeout","notificationReducer","state","action","addBlog","blogService","returnedBlog","title","addLike","blog","modifiedBlog","likes","removeBlog","blogReducer","map","filter","b","Comments","comments","key","Math","random","Blog","useState","isView","setIsView","viewOrHide","setViewOrHide","view","display","buttonText","useDispatch","likeHandler","event","preventDefault","removeHandler","window","confirm","console","log","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","to","author","onClick","url","user","name","IconButton","Delete","BlogList","logout","setMessage","blogs","useSelector","useEffect","Typography","variant","align","gutterBottom","Paper","List","ListItem","NewBlogForm","props","setUrl","setAuthor","setTitle","handleBlogSubmit","blogObject","blogFormRef","current","toggleVisibility","exception","onSubmit","value","onChange","target","login","credentials","setUser","userReducer","useField","setValue","LoginForm","setUsernameValue","usernameInput","setPasswordValue","passwordInput","history","useHistory","open","setOpen","handleLogin","loginService","username","password","localStorage","setItem","JSON","stringify","push","Container","component","maxWidth","CssBaseline","marginTop","marginLeft","Avatar","styles","avatar","noValidate","TextField","margin","required","tf","fullWidth","label","autoComplete","autoFocus","InputLabelProps","floatingLabelFocusStyle","Button","color","submit","Snackbar","Alert","elevation","severity","Toggleable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","showWhenVisible","useImperativeHandle","buttonLabel","children","Users","users","setUsers","TableContainer","Table","TableBody","TableRow","TableCell","length","Menu","linkStyle","paddingRight","AppBar","backgroundColor","position","Toolbar","edge","aria-label","padding","fontSize","href","User","linkedUser","BlogView","linkedBlog","newComment","setNewComment","savedLinkedBlog","setSavedLinkedBlog","addComment","Notification","message","App","useRef","userMatch","useRouteMatch","find","params","blogMatch","loggedUserJSON","getItem","parse","mounted","userService","getUsers","path","removeItem","centered","textAlign","persistConfig","storage","reducers","combineReducers","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0b4ac12b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst clearToken = () => {\r\n  token = null\r\n}\r\n\r\nconst addCommentToDB = async (comment, id) => {\r\n  const config = {\r\n    headers:{Authorization: token}\r\n  }\r\n\r\n  const response = await axios.post(`${baseUrl}/${id}`, {\"comments\": comment}, config)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers:{Authorization: token}\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async updatedObject => {\r\n  const response = await axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers:{Authorization: token}\r\n  }\r\n  await axios.delete(`${baseUrl}/${id}`, config)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  setToken,\r\n  clearToken,\r\n  create,\r\n  update,\r\n  remove,\r\n  addCommentToDB\r\n}","let timeoutID = ''\r\n\r\nconst notificationReducer = (state = '', action) => {\r\n    switch(action.type){\r\n        case 'SET_NOTIFICATION':\r\n            return action.notification\r\n        case 'REMOVE_NOTIFICATION':\r\n            return ''\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const notificationChange = (notification, duration) => {\r\n    return async (dispatch) => {\r\n        if(timeoutID){\r\n            clearTimeout(timeoutID)\r\n        }\r\n        dispatch({\r\n            type: 'SET_NOTIFICATION',\r\n            notification: notification\r\n        })\r\n        timeoutID = setTimeout(() => {\r\n            dispatch({\r\n                type: 'REMOVE_NOTIFICATION'\r\n            })\r\n        }, duration * 1000)\r\n    }\r\n}\r\n\r\nexport default notificationReducer","import blogService from '../services/blogs'\r\nimport { notificationChange} from \"./notificationReducer\"\r\n\r\nconst blogReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'INIT_BLOGS':\r\n            return action.data\r\n        case 'NEW_BLOG':\r\n            return [...state, action.data]\r\n        case 'LIKE':\r\n            const id = action.data.id\r\n            return state.map(blog => blog.id !== id\r\n                                     ? blog\r\n                                     : action.blog\r\n            )\r\n        case 'REMOVE_BLOG':\r\n            return state.filter(b => b.id !== action.blog.id)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initialiseBlogs = () => {\r\n    return async dispatch => {\r\n        const blogs = await blogService.getAll()\r\n        dispatch({\r\n            type: 'INIT_BLOGS',\r\n            data: blogs\r\n        })\r\n    }\r\n}\r\n\r\nexport const addBlog = (data) => {\r\n    return async dispatch => {\r\n        const returnedBlog = await blogService.create(data)\r\n        dispatch({\r\n            type: 'NEW_BLOG',\r\n            data: returnedBlog\r\n        })\r\n        dispatch(notificationChange(`New blog added: ${returnedBlog.title}`))\r\n    }\r\n}\r\n\r\nexport const addLike = (id, blog) => {\r\n    return async (dispatch) => {\r\n        const modifiedBlog = {...blog, likes: blog.likes + 1}\r\n        await blogService.update(modifiedBlog)\r\n        dispatch({\r\n            type: 'LIKE',\r\n            data: { id },\r\n            blog: modifiedBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeBlog = (blog) => {\r\n    return {\r\n        type: 'REMOVE_BLOG',\r\n        blog\r\n    }\r\n}\r\n\r\nexport default blogReducer","import React, {useState} from 'react'\r\nimport blogService from '../services/blogs'\r\nimport { addLike } from \"../reducers/blogReducer\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { removeBlog } from \"../reducers/blogReducer\"\r\nimport { notificationChange } from \"../reducers/notificationReducer\"\r\nimport { Link } from 'react-router-dom'\r\nimport { Delete} from '@material-ui/icons'\r\nimport {IconButton} from \"@material-ui/core\"\r\n\r\nexport const Comments = ({comments}) => {\r\n  if(!comments){\r\n    return(\r\n        <>\r\n        </>\r\n    )\r\n  }\r\n\r\n  return(\r\n      <>\r\n        <ul>\r\n          {comments.map(comment =>\r\n                  <li key={Math.random()*100}>{comment}</li>\r\n                )}\r\n        </ul>\r\n      </>\r\n  )\r\n}\r\n\r\nconst Blog = ({ blog }) => {\r\n  const [isView, setIsView] = useState(false)\r\n  const [viewOrHide, setViewOrHide] = useState(true)\r\n  const view = {display: isView ? '' : 'none'}\r\n  const buttonText = (viewOrHide) ? 'view' : 'hide'\r\n  const dispatch = useDispatch()\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  const viewButtonHandler = () => {\r\n    setIsView(!isView)\r\n    setViewOrHide(!viewOrHide)\r\n  }\r\n\r\n  const likeHandler = async (event) => {\r\n    event.preventDefault()\r\n    await dispatch(addLike(blog.id, blog))\r\n  }\r\n\r\n  const removeHandler = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      if (window.confirm(`Delete ${blog.title}`)) {\r\n        await blogService.remove(blog.id)\r\n        dispatch(removeBlog(blog))\r\n        dispatch(notificationChange(`${blog.title} deleted`, 5))\r\n      }\r\n    }catch(exception){\r\n      console.log(exception)\r\n      dispatch(notificationChange('Remove denied', 5))\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div style={blogStyle} className='fixed'>\r\n      <Link to={`/blogs/${blog.id}`}>{blog.title}</Link> {blog.author}\r\n      <button onClick={viewButtonHandler}>{buttonText}</button>\r\n      <div style={view} className='semi-toggleable'>\r\n        <p>{blog.url}</p>\r\n        <p className='likes'>likes {blog.likes} <button onClick={likeHandler} className='likeButton'>like</button></p>\r\n        <p>{blog.user.name}</p>\r\n        <IconButton onClick={removeHandler}><Delete/></IconButton><br>\r\n      </br>\r\n        comments:\r\n        <Comments comments={blog.comments}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import Blog from \"./Blog\";\r\nimport React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {initialiseBlogs} from \"../reducers/blogReducer\"\r\nimport  {Typography, List, ListItem, ListItemText, Paper}  from '@material-ui/core'\r\n\r\nconst BlogList = ({ logout, setMessage}) => {\r\n    const dispatch = useDispatch()\r\n    const blogs = useSelector(state => state.blogs)\r\n    const user = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        dispatch(initialiseBlogs())\r\n    }, [dispatch])\r\n\r\n    if(!blogs){\r\n        return(\r\n            <div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Typography variant='subtitle1' align='center' gutterBottom>blogs</Typography>\r\n            <p>{user.name} logged in {logout()}</p>\r\n            <Paper>\r\n                <List>\r\n                    {blogs.map(blog =>\r\n                        <ListItem>\r\n                            <Blog key={blog.id} blog={blog}\r\n                                  setMessage={setMessage}\r\n                            />\r\n                        </ListItem>\r\n                    )}\r\n                </List>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogList","import React, {useState} from 'react'\r\nimport {addBlog} from \"../reducers/blogReducer\"\r\nimport {notificationChange} from \"../reducers/notificationReducer\"\r\nimport { useDispatch} from \"react-redux\";\r\n\r\nconst NewBlogForm = (props) => {\r\n    const [url, setUrl] = useState('')\r\n    const [author, setAuthor] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const handleBlogSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const blogObject = {\r\n            title: title,\r\n            author: author,\r\n            url: url\r\n        }\r\n        props.blogFormRef.current.toggleVisibility()\r\n        try {\r\n            dispatch(addBlog(blogObject))\r\n        }catch(exception){\r\n            dispatch(notificationChange('blog add failed'))\r\n        }\r\n\r\n        setTitle('')\r\n        setAuthor('')\r\n        setUrl('')\r\n    }\r\n\r\n    if(props.user === null) {\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h2>create new blog</h2>\r\n            <form onSubmit = {handleBlogSubmit}>\r\n                <div>\r\n                    title\r\n                    <input\r\n                        id='title'\r\n                        type = 'text'\r\n                        value = {title}\r\n                        name = 'Title'\r\n                        onChange = {({target}) => setTitle(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    author\r\n                    <input\r\n                        id='author'\r\n                        type = 'text'\r\n                        value = {author}\r\n                        name = 'Author'\r\n                        onChange = {({target}) => setAuthor(target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    url\r\n                    <input\r\n                        id='url'\r\n                        type = 'text'\r\n                        value = {url}\r\n                        name = 'Url'\r\n                        onChange = {({target}) => setUrl(target.value)}\r\n                    />\r\n                </div>\r\n                <button id='createButton' type = 'submit'>create</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NewBlogForm","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default {login}","const userReducer = (state = null, action) => {\r\n    if (action.type === 'SET_USER') {\r\n        return action.user\r\n    } else {\r\n        return state\r\n    }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n    return {\r\n        type: 'SET_USER',\r\n        user\r\n    }\r\n}\r\n\r\nexport default userReducer","import React, {useState} from 'react'\r\nimport loginService from \"../services/login\"\r\nimport blogService from \"../services/blogs\"\r\nimport {setUser} from \"../reducers/userReducer\"\r\nimport {notificationChange} from \"../reducers/notificationReducer\"\r\nimport {useDispatch} from 'react-redux'\r\nimport {useHistory} from \"react-router-dom\"\r\nimport styles from '../App.module.css'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport {Container, Typography, Avatar,\r\n        TextField, Button, Snackbar,\r\n        CssBaseline} from \"@material-ui/core\";\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nconst useField = (id, type, name) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const onChange = (event) => {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    return {\r\n        id,\r\n        type,\r\n        name,\r\n        value,\r\n        onChange,\r\n        setValue\r\n    }\r\n}\r\n\r\nconst LoginForm = () => {\r\n    const {setValue: setUsernameValue, ...usernameInput} = useField('username', 'text', 'Username')\r\n    const {setValue: setPasswordValue, ...passwordInput} = useField('password', 'password', 'Password')\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleLogin = async (event) => {\r\n        event.preventDefault()\r\n        try{\r\n            const user = await loginService.login({\r\n                username: usernameInput.value,\r\n                password: passwordInput.value\r\n            })\r\n            window.localStorage.setItem(\r\n                'loggedBlogAppUser', JSON.stringify(user)\r\n            )\r\n\r\n            blogService.setToken(user.token)\r\n            dispatch(setUser(user))\r\n            setUsernameValue('')\r\n            setPasswordValue('')\r\n            setOpen(true)\r\n            setTimeout(() => {\r\n                setOpen(false)\r\n                history.push('/blogs')\r\n            }, 2000)\r\n        }catch(exception){\r\n            dispatch(notificationChange('Wrong credentials', 5))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Container component = 'main' maxWidth='xs'>\r\n            <CssBaseline/>\r\n            <div style={{marginTop: '100px'}}>\r\n                <Typography component='h1' variant ='h5' style={{marginLeft: '23%'}}>\r\n                    log in to application\r\n                </Typography>\r\n                <Avatar className={styles.avatar}>\r\n                    <AccountCircleIcon/>\r\n                </Avatar>\r\n                <form onSubmit = {handleLogin} noValidate>\r\n                    <TextField margin='normal' required className={styles.tf}\r\n                               fullWidth id='username' variant='filled'\r\n                               label='Username' name='username'\r\n                               autoComplete='email' autoFocus\r\n                               InputLabelProps={{\r\n                                   className: styles.floatingLabelFocusStyle,\r\n                               }} {...usernameInput}\r\n                    />\r\n                    <TextField margin='normal' required className={styles.tf}\r\n                               fullWidth name='password' variant='filled'\r\n                               label='Password' type='password'\r\n                               id='password' autoComplete='current-password'\r\n                               InputLabelProps={{\r\n                                   className: styles.floatingLabelFocusStyle,\r\n                               }}\r\n                               {...passwordInput}\r\n                    />\r\n                    <Button\r\n                        type='submit' fullWidth\r\n                        variant='contained' color='primary'\r\n                        id='login-button'\r\n                        className={styles.submit}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n        <Snackbar open={open} >\r\n            <Alert elevation={6} variant=\"filled\" severity='success'>\r\n               Login Successful\r\n            </Alert>\r\n        </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n}\r\n\r\nexport default LoginForm","import React, {useState, useImperativeHandle} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Toggleable = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = {display: visible ? 'none' : ''}\r\n    const showWhenVisible = {display: visible ? '' : 'none'}\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return {\r\n            toggleVisibility\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n            </div>\r\n            <div style={showWhenVisible} className='toggleableContent'>\r\n                {props.children}\r\n                <button onClick={toggleVisibility}>cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nToggleable.propTypes = {\r\n    buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Toggleable","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll\r\n}","import React, {useState, useEffect} from \"react\"\r\nimport userService from '../services/users'\r\nimport { Table, TableContainer, TableBody, TableRow, TableCell } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Users = ({users, setUsers}) => {\r\n\r\n    return(\r\n        <>\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                                number of blogs created\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        {users.map(user => (\r\n                            <TableRow key = {user.id}>\r\n                                <TableCell>\r\n                                    <Link to={`/users/${user.id}`}>{user.name}</Link>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    {user.blogs.length}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users","import AppBar from \"@material-ui/core/AppBar\";\r\nimport React from \"react\";\r\nimport { IconButton, Button, Toolbar } from \"@material-ui/core\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Menu = () => {\r\n    const linkStyle = {\r\n        paddingRight: 3,\r\n    }\r\n\r\n    return (\r\n        <AppBar style={{backgroundColor: \"#8583af\"}} position='static'>\r\n            <Toolbar>\r\n                <IconButton edge='start' color='inherit' aria-label='menu'>\r\n                </IconButton>\r\n                <Button style={{\r\n                    backgroundColor: \"#c297c7\",\r\n                    padding: \"10px 10px\",\r\n                    fontSize: \"15px\"\r\n                }} color='inherit'>\r\n                    <Link href='#' style={linkStyle} to='/blogs'>blogs</Link>\r\n                </Button>\r\n                <Button style={{\r\n                    backgroundColor: \"#c297c7\",\r\n                    padding: \"10px 10px\",\r\n                    fontSize: \"15px\"\r\n                }} color='inherit'>\r\n                    <Link style={linkStyle} to='/users'>users</Link>\r\n                </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\n\r\nconst User = ({linkedUser}) => {\r\n    if(!linkedUser){\r\n        return(\r\n            <>\r\n                ...Loading\r\n            </>\r\n        )\r\n    }\r\n    return(\r\n        <>\r\n            <h1>{linkedUser.name}</h1>\r\n            <h2>added blogs</h2>\r\n            <ul>\r\n                {linkedUser.blogs.map(blog =>\r\n                    <li>\r\n                        {blog.title}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default User","import React, {useState} from \"react\"\r\nimport {addLike} from \"../reducers/blogReducer\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {Comments} from './Blog'\r\nimport blogService from '../services/blogs'\r\n\r\nconst BlogView = ({linkedBlog}) => {\r\n    const dispatch = useDispatch()\r\n    const [newComment, setNewComment] = useState('')\r\n    const [savedLinkedBlog, setSavedLinkedBlog] = useState(linkedBlog)\r\n\r\n    const handleCommentChange = event => {\r\n        setNewComment(event.target.value)\r\n    }\r\n\r\n    const likeHandler = async (event) => {\r\n        event.preventDefault()\r\n        await dispatch(addLike(savedLinkedBlog.id, savedLinkedBlog))\r\n    }\r\n\r\n    const addComment = async (event) => {\r\n        event.preventDefault()\r\n        const returnedBlog = await blogService.addCommentToDB(newComment, savedLinkedBlog.id)\r\n        setSavedLinkedBlog(returnedBlog)\r\n        setNewComment('')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>{savedLinkedBlog.title}</h1>\r\n            <div>\r\n                {savedLinkedBlog.url}<br>\r\n            </br>\r\n                {savedLinkedBlog.likes} likes <button onClick={likeHandler}>like</button><br>\r\n            </br>\r\n                added by {savedLinkedBlog.author}\r\n            </div><br>\r\n            </br>\r\n                comments:\r\n            <form onSubmit={addComment} >\r\n                <input value={newComment} onChange={handleCommentChange}/>\r\n                <button type='submit'>add comment</button>\r\n            </form>\r\n            <Comments comments={savedLinkedBlog.comments}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BlogView","import React, {useEffect, useRef, useState} from 'react'\r\nimport BlogList from './components/BlogList'\r\nimport NewBlogForm from './components/NewBlogForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport blogService from './services/blogs'\r\nimport Toggleable from './components/Toggleable'\r\nimport './index.css'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {setUser} from \"./reducers/userReducer\"\r\nimport { BrowserRouter as Router, Switch, Route, useRouteMatch} from 'react-router-dom'\r\nimport Users from \"./components/Users\"\r\nimport Menu from './components/Menu'\r\nimport User from './components/User'\r\nimport userService from \"./services/users\"\r\nimport BlogView from './components/BlogView'\r\nimport styles from './App.module.css'\r\n\r\nconst Notification = ({message}) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className = \"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    const [users, setUsers] = useState([])\r\n    const message = useSelector(state => state.notification)\r\n    const user = useSelector(state => state.user)\r\n    const blogs = useSelector(state => state.blogs)\r\n    const blogFormRef = useRef()\r\n    const dispatch = useDispatch()\r\n    const userMatch = useRouteMatch('/users/:id')\r\n    const linkedUser = userMatch\r\n        ? users.find(user => user.id === userMatch.params.id)\r\n        : null\r\n    const blogMatch = useRouteMatch('/blogs/:id')\r\n    const linkedBlog = blogMatch\r\n        ? blogs.find(blog => blog.id === blogMatch.params.id)\r\n        : null\r\n    console.log('BLOG MATCH', blogMatch)\r\n    console.log('BLOGS', blogs)\r\n    console.log('USER', user)\r\n    console.log('LINKED BLOG', linkedBlog)\r\n\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n        if(loggedUserJSON){\r\n            const user = JSON.parse(loggedUserJSON)\r\n            dispatch(setUser(user))\r\n            blogService.setToken(user.token)\r\n        }\r\n        console.log(blogs)\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        const getUsers = async () => {\r\n            const users = await userService.getAll()\r\n            if(mounted) {\r\n                setUsers(users)\r\n            }\r\n        }\r\n        getUsers().then()\r\n\r\n        return () => mounted = false\r\n    }, [])\r\n\r\n    const logout = () => (\r\n        <button onClick = {(event) => {\r\n            event.preventDefault()\r\n            window.localStorage.removeItem('loggedBlogAppUser')\r\n            dispatch(setUser(null))\r\n            blogService.clearToken()\r\n        }}>\r\n            logout\r\n        </button>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Notification message = {message}/>\r\n            <Menu />\r\n            {user === null && <LoginForm\r\n            />}\r\n            <Switch>\r\n                <Route path='/blogs/:id'>\r\n                    <BlogView linkedBlog={linkedBlog}/>\r\n                </Route>\r\n                <Route path='/blogs'>\r\n                    <div>\r\n                        {user !== null && <BlogList logout={logout}\r\n                        />}\r\n                        {user !== null &&\r\n                        <div>\r\n                            <Toggleable buttonLabel='create new blog' ref={blogFormRef}>\r\n                                <NewBlogForm user={user} blogFormRef={blogFormRef}\r\n                                />\r\n                            </Toggleable>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </Route>\r\n                <Route path='/users/:id'>\r\n                    <User linkedUser={linkedUser}/>\r\n                </Route>\r\n                <Route path='/users'>\r\n                    {user !== null && <Users users={users} setUsers={setUsers}/>}\r\n                </Route>\r\n                <Route path='/'>\r\n                    <div className={styles.centered}>\r\n                        {user !== null && <h1 style={{textAlign:\"center\"}}>A Blogging App </h1>}\r\n                    </div>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import blogReducer from './reducers/blogReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {createStore, applyMiddleware, combineReducers} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage\r\n}\r\n\r\nconst reducers = combineReducers({\r\n    blogs: blogReducer,\r\n    notification: notificationReducer,\r\n    user: userReducer\r\n})\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nconst store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store, {persistor} from './store'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { PersistGate } from \"redux-persist/integration/react\"\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <Router>\r\n                <App />\r\n            </Router>\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centered\":\"App_centered__1ermP\",\"paper\":\"App_paper__Tg5o7\",\"avatar\":\"App_avatar__2hEeV\",\"tf\":\"App_tf__2B1F4\",\"floatingLabelFocusStyle\":\"App_floatingLabelFocusStyle__2Ainb\",\"submit\":\"App_submit__QRL9_\"};"],"sourceRoot":""}